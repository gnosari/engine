name: Research Team Demo
description: Research Team Example

tools:
  - name: web_search
    module: agents
    class: WebSearchTool

  - name: website_content
    module: gnosari.tools.website_content
    class: WebsiteContentTool
    args:
      base_url: https://r.ai.neomanex.com
      timeout: 30

  - name: delegate_agent
    module: gnosari.tools.openai.delegate_agent
    class: DelegateAgentTool
    args:
      pass

  - name: file_ops
    module: gnosari.tools.file_operations
    class: FileOperationsTool
    args:
      base_directory: "./research"
      allowed_extensions: [".txt", ".json", ".md", ".py"]

agents:
  - name: Coordinator
    orchestrator: true
    model: gpt-4.1
    tools:
      - delegate_agent
      - file_ops
    instructions: >
      Coordinate production using file handoffs in ./test_workspace.
      Do NOT assume a fixed sequence. Create/clean a run_id folder per task
      (e.g., ./test_workspace/{run_id}/). Point agents to the latest files and
      request revisions until Reviewer approves. Bundle final outputs into
      ./test_workspace/{run_id}/final/.
      
      Iterate / Delegate again if the agent finds any problems.
  - name: Web Researcher
    orchestrator: false
    model: gpt-4.1
    tools:
      - web_search
      - website_content
      - file_ops
    instructions: >
      Read input topic from ./test_workspace/{run_id}/topic.txt.
      Research with web_search/website_content and write:
        - research.json  (keys: findings[], quotes[], data_points[], source_map[])
        - research.md    (human-readable summary with citations)
      Save both under ./test_workspace/{run_id}/.

  - name: Outliner
    orchestrator: false
    model: gpt-4.1
    tools:
      - file_ops
    instructions: >
      Read research.json. Produce:
        - outline.json (thesis, audience, sections[{h2, h3[] , sources[]}])
        - outline.md   (H2/H3 scaffold + notes)
      Write to ./test_workspace/{run_id}/.

  - name: Writer
    orchestrator: false
    model: gpt-4.1
    tools:
      - file_ops
    instructions: >
      Read outline.json and research.json. Draft:
        - draft.md (≈1,800–2,200 words, inline refs [^n], add "References" section)
      Write to ./test_workspace/{run_id}/.

  - name: Editor
    orchestrator: false
    model: gpt-4.1
    tools:
      - file_ops
    instructions: >
      Read draft.md. Edit for clarity, flow, accuracy, and structure.
      Output:
        - edited.md (clean, publish-ready)
        - changelog.txt (bullet list of edits & rationale)
      Write to ./test_workspace/{run_id}/.

  - name: Reviewer
    orchestrator: false
    model: gpt-4.1
    tools:
      - web_search
      - website_content
      - file_ops
    instructions: >
      Read edited.md and research.json. Spot-check facts against sources,
      verify quotes (≤25 words), and flag unsupported claims.
      Output:
        - review.json (status: approved|changes_requested, issues[], suggestions[])
      If changes requested, annotate line numbers. Write to ./test_workspace/{run_id}/.

  - name: SEO Specialist
    orchestrator: false
    model: gpt-4.1
    tools:
      - file_ops
    instructions: >
      Read edited.md (or latest approved file) and produce:
        - seo.json {primary_keyword, secondary_keywords[], meta_title, meta_description, slug,
                    image_alt_suggestions[], internal_link_anchors[], faq[{q,a}]}
        - final.md (insert H1/H2 optimizations lightly, no keyword stuffing)
      Write to ./test_workspace/{run_id}/.