name: "My Development Team"
description: "Example team configuration using stdio MCP servers"

# Team configuration
config:
  max_turns: 200  # Maximum number of conversation turns per execution

# Tools configuration with stdio MCP server
tools:
  - name: "interactive_bash"
    module: "gnosari.tools.interactive_bash_operations"
    class: "InteractiveBashOperationsTool"
    args:
      unsafe_mode: true
      base_directory: "./"
#      allowed_commands: [ "npm", "git", "python", "pip", "make", "cursor-agent", "npx",  ]
      max_output_size: 5242880  # 5MB

  - name: "filesystem"
    connection_type: "stdio"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-filesystem", "./"]

  - name: "playwright"
    connection_type: "stdio"
    command: "npx"
    args: ["-y", "@playwright/mcp@latest"]

  - name: bash
    module: gnosari.tools.bash_operations
    class: BashOperationsTool
    args:
      unsafe_mode: true
      base_directory: ./workspace

# Agents configuration
agents:
#  - name: Technical Lead
#    instructions: >
#      You are the technical lead of a team of developers.
#      Transfer to the Developer Agent to accomplish user request.
#      You are autonomous and you should answer any questions the developer has without asking any question to the user.
#      Always make sure that the result is working. If its not working transfer back the Developer to fix it.
#    can_transfer_to:
#      - agent: 'Developer'
#        instructions: 'Contact to start developing or fixing something.'
#    orchestrator: true
#    tools:
#      - bash

  - name: Devops Operator
    instructions: >
      You are a devops operator.
    tools:
      - interactive_bash

  - name: Developer
    instructions: > 
      You are an autonomous Nuxt developer performing the task you are given by using executing cursor-agent bash command. 
      Review the folders and user message is accurate
      If there needs development work Pass the task to cursor-agent by executing the following bash:
      ```
      cursor-agent -p --force "Improved and concise Task Description. Tell to NOT execute blocking commands (eg. npm run dev, npm run build)."
      ```
      
      Run the server, execute `npm run dev` using a random port and pass test instructions to the QA Agent. 
      When finished, use delegation tool to hand it to the QA Agent with detailed instructions how to test to make sure its working. 

#    mcp_servers: ["bash"]
    tools:
      - interactive_bash
    delegation:
#      - agent: Technical Lead
#        instructions: Once you are finished or you are blocked, hand back to the tech lead.
      - agent: QA Agent
        instructions: > 
          Contact QA Agent with the steps and instructions to test your task.
#    delegation:
#      - agent: QA Agent
#        instructions: >
#          After completing the task contact QA Agent with the steps and instructions to test your task.
#          Always is prefered to use docker so that QA can test tasks locally without blocking commands (eg. no run the server interactive).
#          eg. start the server, and navigate to this page, etc..

  - name: QA Agent
    instructions: |
      You are an autonomous QA agent that receives requests to test a feature and you test it by using playwright.
#    model: "gpt-5"
    mcp_servers: ["playwright", "bash"]
#    can_transfer_to:
#      - agent: Developer
#        instructions: Transfer back to Developer when testing is complete or if you need clarification.

#  - name: "FileManager"
#    instructions: |
#      You are a file management specialist. You help users organize, read, and manipulate files using the filesystem MCP server.
#
#      Use the filesystem tools to:
#      - Read and write files
#      - List directory contents
#      - Create and organize directories
#      - Search for files and content
#
#      Always ensure file operations are safe and follow best practices.
#    orchestrator: true
#    model: "gpt-4o"
#    temperature: 0.3
#    tools: ["api_tool"]
#    mcp_servers: ["filesystem"]
#    can_transfer_to: ["DataAnalyst"]
#
#  - name: "DataAnalyst"
#    instructions: |
#      You are a data analysis specialist. You work with the FileManager to analyze data files and generate insights.
#
#      Your role:
#      - Analyze data from files provided by FileManager
#      - Generate reports and visualizations
#      - Identify patterns and trends in data
#      - Provide recommendations based on analysis
#
#      Work closely with FileManager to access and process data files.
#    model: "gpt-4o"
#    temperature: 0.1
#    tools: ["api_tool"]
#    mcp_servers: ["filesystem"]
#    can_transfer_to: ["FileManager"]